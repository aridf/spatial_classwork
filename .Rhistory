df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected')
df_city
df_city <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
df_county <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
df_county
city_lookup
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
city_lookup$layoffs <- merge(city_lookup, df_city, by=city)
df <- read_csv('a3/ohio_clean.csv')
city_lookup <- read_csv('a3/city_populations.csv')
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected')
df_county <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
city_lookup$layoffs <- merge(city_lookup, df_city, by=city)
?merge
city_lookup$layoffs <- merge(city_lookup, df_city)
city_lookup$layoffs <- merge(city_lookup, df_city, all = T)
df_city$city
city_lookup$city
city_lookup$layoffs <- merge(city_lookup, df_city, all.x = T)
df <- merge(city_lookup, df_city, all.x = T)
df
df <- read_csv('a3/ohio_clean.csv')
city_lookup <- read_csv('a3/city_populations.csv')
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected')
df_county <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
df <- merge(city_lookup, df_city, all.x = T)
df$num_affected
df_city
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected') %>%
arrange(desc(num_affected))
df_city
df <- merge(city_lookup, df_city, all.x = T)
df$prop_affected <- df$num_affected / df$pop2019
df %>% arrange(desc(df$prop_affected))
df %>% arrange(desc(df$prop_affected))[1:10,]
df <- df %>% arrange(desc(df$prop_affected))
df
df[1:10]
head(df %>% select(-location))
df$location
df[200,]
library(usmap)
install.packages('usmap')
plot_usmap(include ='OH')
library(usmap)
library(ggplot2)
plot_usmap(include ='OH')
plot_usmap(include ='OH', regions='counties')
statepop
library(maps)
x <- map_data('ohio')
x <- map_data('Ohio')
x <- map_data('county')
View(df_county)
View(x)
counties <- map_data("counties")
counties <- map_data("county")
USArrests
df$location
df$location[1:10]
gsub("[=]\\d{2}", df$location)
gsub("[=](\\d{2})[.](\\d{6}).*", "\\1.\\2", df$location)
gsub("[=](\\d{2})[.](\\d{5, 6}).*", "\\1.\\2", df$location)
gsub("[=](\\d{2})[.](\\d{5, 6}).*", "\\1.\\2", df$location)
gsub("[=](\\d{2})[.](\\d{5,6}).*", "\\1.\\2", df$location)
gsub("*[=](\\d{2})[.](\\d{5,6}).*", "\\1.\\2", df$location)
gsub("*[=](\\d{2})[.](\\d{3,4,5,6}).*", "\\1.\\2", df$location)
gsub("*[=](\\d{2})[.](\\d{3,4,5,6}).*", "\\1.\\2", df$location)
df$location[1:10]
df %>%
separate_rows(location, sep = ',')
df %>%
separate_rows(location, sep = ',')[1:10]
dft <- df[1:10,]
dft %>%
separate_rows(location, sep = ',') %>%
counties <- map_data("county")
dft %>%
separate_rows(location, sep = ',')
dft %>%
separate_rows(location, sep = '=|,')
dft %>%
separate_rows(location, sep = '=|,') %>%
group_by(city)
dft %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3)
dft %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long'))
dft %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location)
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location)
plot_usmap(include = 'Ohio', regions = 'counties')
plot_usmap(include = 'Ohio', regions = 'counties') +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long))
df <- read_csv('a3/ohio_clean.csv')
city_lookup <- read_csv('a3/city_populations.csv')
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected') %>%
arrange(desc(num_affected))
df_county <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
df <- merge(city_lookup, df_city, all.x = T)
df$prop_affected <- df$num_affected / df$pop2019
df <- df %>% arrange(desc(df$prop_affected))
head(df %>% select(-location))
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long))
df
df$long[1]
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long), lat = as.double(lat))
df <- read_csv('a3/ohio_clean.csv')
city_lookup <- read_csv('a3/city_populations.csv')
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected') %>%
arrange(desc(num_affected))
df_county <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
df <- merge(city_lookup, df_city, all.x = T)
df$prop_affected <- df$num_affected / df$pop2019
df <- df %>% arrange(desc(df$prop_affected))
head(df %>% select(-location))
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long), lat = as.double(lat))
plot_usmap(include = 'Ohio', regions = 'counties') +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
df <- read_csv('a3/ohio_clean.csv')
city_lookup <- read_csv('a3/city_populations.csv')
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected') %>%
arrange(desc(num_affected))
df_county <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
df <- merge(city_lookup, df_city, all.x = T)
df$prop_affected <- df$num_affected / df$pop2019
df <- df %>% arrange(desc(df$prop_affected))
head(df %>% select(-location))
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('long', 'lat')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long), lat = as.double(lat))
plot_usmap(include = 'Ohio', regions = 'counties') +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
df
ggplot + geom_polygon(data=counties(x=long, y = lat))
counties <- map_data("county")
ggplot + geom_polygon(data=counties(x=long, y = lat)) +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
ggplot + geom_polygon(data=counties, aes(x=long, y = lat)) +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
ggplot + geom_polygon(data=counties, aes(x=long, y = lat))
states <- map_data("state")
arrests <- USArrests
names(arrests) <- tolower(names(arrests))
arrests$region <- tolower(rownames(USArrests))
choro <- merge(states, arrests, sort = FALSE, by = "region")
choro
head(choro)
choro <- choro[order(choro$order), ]
head(choro)
ggplot(choro, aes(long, lat)) +
geom_polygon(aes(group = group, fill = assault))
ggplot + geom_polygon(data=counties, aes(long, lat))
ggplot(counties, aes(long, lat)) + geom_polygon() +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
ggplot(counties, aes(long, lat)) + geom_polygon()
states <- map_data("states")
ggplot(states, aes(long, lat)) + geom_polygon() +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
ggplot(states, aes(long, lat)) + geom_polygon()
counties <- map_data("county")
counties
counties <- counties %>%
filter(region = 'ohio')
counties <- counties %>%
filter(region == 'ohio')
countes
counties
ggplot(states, aes(long, lat)) + geom_polygon()
ggplot(counties, aes(long, lat)) + geom_polygon()
df <- read_csv('a3/ohio_clean.csv')
city_lookup <- read_csv('a3/city_populations.csv')
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected') %>%
arrange(desc(num_affected))
df_county <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
df <- merge(city_lookup, df_city, all.x = T)
df$prop_affected <- df$num_affected / df$pop2019
df <- df %>% arrange(desc(df$prop_affected))
head(df %>% select(-location))
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long), lat = as.double(lat))
counties <- map_data("county")
counties <- counties %>%
filter(region == 'ohio')
ggplot(counties, aes(long, lat)) + geom_polygon() +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
states <- map_data("state")
ggplot(states, aes(long, lat)) + geom_polygon()
ggplot(states, aes(long, lat)) + geom_polygon() +
coord_map("albers",  at0 = 45.5, lat1 = 29.5)
ggplot(states, aes(long, lat)) + geom_polygon() +
coord_map("albers",  at0 = 45.5, lat1 = 29.5)
states <- map_data("state")
arrests <- USArrests
names(arrests) <- tolower(names(arrests))
arrests$region <- tolower(rownames(USArrests))
choro <- merge(states, arrests, sort = FALSE, by = "region")
choro <- choro[order(choro$order), ]
ggplot(choro, aes(long, lat)) +
geom_polygon(aes(group = group, fill = assault)) +
coord_map("albers",  at0 = 45.5, lat1 = 29.5)
rm(list=ls())
states <- map_data("state")
arrests <- USArrests
names(arrests) <- tolower(names(arrests))
arrests$region <- tolower(rownames(USArrests))
choro <- merge(states, arrests, sort = FALSE, by = "region")
choro <- choro[order(choro$order), ]
ggplot(choro, aes(long, lat)) +
geom_polygon(aes(group = group, fill = assault)) +
coord_map("albers",  at0 = 45.5, lat1 = 29.5)
df <- read_csv('a3/ohio_clean.csv')
city_lookup <- read_csv('a3/city_populations.csv')
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected') %>%
arrange(desc(num_affected))
df_county <- df %>%
group_by(county) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('county', 'num_affected')
df <- merge(city_lookup, df_city, all.x = T)
df$prop_affected <- df$num_affected / df$pop2019
df <- df %>% arrange(desc(df$prop_affected))
head(df %>% select(-location))
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long), lat = as.double(lat))
counties <- map_data("county")
counties <- counties %>%
filter(region == 'ohio')
ggplot(counties, aes(long, lat)) + geom_polygon() +
geom_point(data = df, aes(x = long, y = lat), color = 'red')
f <- tempfile()
download.file("http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_20m.zip", destfile = f)
unzip(f, exdir = ".")
US <- read_shape("gz_2010_us_050_00_20m.shp")
library(tmap)      # package for plotting
library(readxl)    # for reading Excel
library(maptools)  # for unionSpatialPolygons
install.packages(tmap)
install.packages('tmap')
library(usmap)
library(tmap)      # package for plotting
library(readxl)    # for reading Excel
library(maptools)  # for unionSpatialPolygons
US <- read_shape("gz_2010_us_050_00_20m.shp")
library(tmap)      # package for plotting
??read_shape
US <- read_shape("gz_2010_us_050_00_20m.shp")
US <- read.shape("gz_2010_us_050_00_20m.shp")
??st.read
??st_read
install.packages('sf')
install.packages("sf")
library(sf)
US <- st_read("gz_2010_us_050_00_20m.shp")
plot(US)
class(US)
US
# leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US <- US[!(US$STATE == '39',]
# leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
US <- US[US$STATE == '39',]
nc <- st_read(system.file('shape/nc.shp', packages='sf'))
nc <- st_read(system.file('shape/nc.shp', package='sf'))
View(nc)
plot(US$COUNTY)
plot(US)
# leave out AK, HI, and PR (state FIPS: 02, 15, and 72)
ohio <- US[US$STATE == '39',]
plot(st_geometry(ohio))
##
ohio_centroid <- st_centroid(ohio)
plot(st_geometry(ohio_centroid), col='red')
plot(st_geometry(ohio_centroid), col='red', add = T)
##
plot(st_geometry(ohio))
plot(st_geometry(ohio_centroid), col='red', add = T)
plot(st_geometry(ohio))
ohio_cities_sf <- st_as_sf(df, coords = c('long', 'lat'))
class(ohio_cities_sf)
View(ohio_cities_sf)
ggplot(data = ohio) +
geom_sf()
library(ggplot2)
ggplot(data = ohio) +
geom_sf()
theme_set(theme_bw())
ggplot(data = ohio) +
geom_sf()
ggplot(data = world) +
geom_sf()
library("rnaturalearth")
library("rnaturalearthdata")
install.packages('rnaturalearthdata')
install.packages('rnaturalearth')
library("rnaturalearth")
library("rnaturalearthdata")
ggplot(data = world) +
geom_sf() +
geom_sf(data = ohio)
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, size = prop_affected, shape = 23, fill = "darkred")
ohio_cities_sf
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred")
ohio_cities_sf <- st_as_sf(df, coords = c('long', 'lat'),
crs = 4326, agr = "constant")
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred")
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred", size = prop_affected)
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred")
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred", alpha = 0.25)
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred", alpha = 0.5)
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, fill = "darkred", alpha = 0.5)
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long), lat = as.double(lat)) %>%
filter(!is.na(prop_affected))
rm(list=ls())
library(tidyverse)
library(ggplot2)
theme_set(theme_bw())
library(maps)
library(usmap)
library(tmap)      # package for plotting
library(readxl)    # for reading Excel
library(maptools)  # for unionSpatialPolygons
library("rnaturalearth")
library("rnaturalearthdata")
df <- read_csv('a3/ohio_clean.csv')
city_lookup <- read_csv('a3/city_populations.csv')
city_lookup$asciiname <- tolower(city_lookup$asciiname)
colnames(city_lookup) <- c('city', 'pop2019', 'location')
df <- df %>% arrange(desc(num_affected))
df_city <- df %>%
group_by(city) %>%
summarise(sum(num_affected, na.rm = T)) %>%
set_names('city', 'num_affected') %>%
arrange(desc(num_affected))
df <- merge(city_lookup, df_city, all.x = T)
df$prop_affected <- df$num_affected / df$pop2019
df <- df %>% arrange(desc(df$prop_affected))
head(df %>% select(-location))
df <- df %>%
separate_rows(location, sep = '=|,') %>%
group_by(city) %>%
slice(2:3) %>%
mutate('dim' = c('lat', 'long')) %>%
pivot_wider(names_from = 'dim', values_from = location) %>%
mutate(long = as.double(long), lat = as.double(lat)) %>%
filter(!is.na(prop_affected))
US <- st_read("gz_2010_us_050_00_20m.shp")
ohio <- US[US$STATE == '39',]
ohio_cities_sf <- st_as_sf(df, coords = c('long', 'lat'),
crs = 4326, agr = "constant")
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred", alpha)
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred", alpha)
library(ggplot2)
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred", alpha)
library(sf)
ggplot(data = ohio) +
geom_sf() +
geom_sf(data = ohio_cities_sf, shape = 23, fill = "darkred", alpha)
